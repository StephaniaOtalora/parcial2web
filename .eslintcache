[{"C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\index.js":"1","C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\reportWebVitals.js":"3","C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\components\\pokemons.js":"4","C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\components\\Pokemons.js":"5","C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\components\\Pokemon.js":"6"},{"size":1096,"mtime":1607127361192,"results":"7","hashOfConfig":"8"},{"size":5064,"mtime":1607127518203,"results":"9","hashOfConfig":"8"},{"size":364,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1825,"mtime":1607122090211,"results":"11","hashOfConfig":"12"},{"size":4058,"mtime":1607127135098,"results":"13","hashOfConfig":"8"},{"size":751,"mtime":1607124059029,"results":"14","hashOfConfig":"8"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1g5i7d8",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13jv13j",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\index.js",[],["30","31"],"C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\reportWebVitals.js",[],"C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\components\\pokemons.js",["32","33","34","35"],"C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\components\\Pokemons.js",["36"],"import React, { useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Pokemon from \"./Pokemon\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst width = 1000;\r\nconst height = 700;\r\nconst margin = { top: 10, left: 100, bottom: 40, right: 10 };\r\nconst iwidth = width - margin.left - margin.right;\r\nconst iheight = height - margin.top - margin.bottom;\r\n\r\nexport default class Pokemons extends React.Component {\r\n  state = {\r\n    pokemons: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!navigator.onLine) {\r\n      if (localStorage.getItem(\"pokemons\") === null) return;\r\n      else {\r\n        localStorage\r\n          .getItem(\"pokemons\")\r\n          .json()\r\n          .then((cha) => {\r\n            this.setState({ pokemons: cha });\r\n          });\r\n        console.log(this.state.pokemons);\r\n      }\r\n    } else {\r\n      let url =\"\";\r\n      if ((navigator.language || navigator.userLanguage).includes(\"es\")) {\r\n        url =\r\n          \"https://gist.githubusercontent.com/jhonatan89/e379fadf8ed0f5381a2d8f8f3dea90c3/raw/e2bc20df02828d297f99558551e37959ac97a6f8/pokemon-es.json\";\r\n      } else if (\r\n        (navigator.language || navigator.userLanguage).includes(\"en\")\r\n      ) {\r\n        url =\r\n          \"https://gist.githubusercontent.com/jhonatan89/2089276d3ce0faceff8e55fc3459b818/raw/30ee1a77b3e328108faaaa9aaac6f2ddaa3d3711/pokemons-en.json\";\r\n      }\r\n      fetch(url)\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((cha) => {\r\n          console.log(cha);\r\n          this.setState({ pokemons: cha });\r\n          localStorage.setItem(\"pokemons\", JSON.stringify(this.state.pokemons));\r\n          this.renderGrafica();\r\n        });\r\n    }\r\n  }\r\n\r\n  renderPokemons() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          <FormattedMessage id=\"title\" />\r\n        </h1>\r\n        <Table responsive=\"sm\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>#</th>\r\n              <th>\r\n                <FormattedMessage id=\"img\" />\r\n              </th>\r\n              <th>\r\n                <FormattedMessage id=\"name\" />\r\n              </th>\r\n              <th>\r\n                <FormattedMessage id=\"description\" />\r\n              </th>\r\n              <th>\r\n                <FormattedMessage id=\"weight\" />\r\n              </th>\r\n              <th>\r\n                <FormattedMessage id=\"height\" />\r\n              </th>\r\n              <th>\r\n                <FormattedMessage id=\"type\" />\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.pokemons.map((e, i) => (\r\n              <Pokemon key={i} pokemon={e} />\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderGrafica() {\r\n    const canvas = d3.select(this.refs.canvas);\r\n\r\n    const svg = canvas.append(\"svg\");\r\n    svg.attr(\"width\", width);\r\n    svg.attr(\"height\", height);\r\n    svg.attr(\"width\", width);\r\n    svg.attr(\"height\", height);\r\n\r\n    let g = svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    const y = d3.scaleLinear().domain([0, 1000]).range([iheight, 0]);\r\n\r\n    const x = d3\r\n      .scaleBand()\r\n      .domain(this.state.pokemons.map((d) => d.name))\r\n      .range([0, iwidth])\r\n      .padding(0.1);\r\n\r\n    const bars = g.selectAll(\"rect\").data(this.state.pokemons);\r\n\r\n    console.log(bars, \"bars\");\r\n    bars\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .style(\"fill\", \"#29B6F6\")\r\n      .attr(\"x\", (d) => x(d.name))\r\n      .attr(\"y\", (d) => y(d.height))\r\n      .attr(\"height\", (d) => iheight - y(d.height))\r\n      .attr(\"width\", x.bandwidth());\r\n\r\n    g.append(\"g\")\r\n      .classed(\"x--axis\", true)\r\n      .call(d3.axisBottom(x))\r\n      .attr(\"transform\", `translate(0, ${iheight})`);\r\n\r\n    g.append(\"g\").classed(\"y--axis\", true).call(d3.axisLeft(y));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderPokemons()}\r\n        <div ref=\"canvas\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Stephania\\Documents\\Web\\parcial2web\\src\\components\\Pokemon.js",["37"],"import React from \"react\";\r\n\r\nexport default class Pokemon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pokemon: this.props.pokemon,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>{this.state.pokemon.id}</td>\r\n        <td>\r\n          <img src={this.state.pokemon.ThumbnailImage}></img>\r\n        </td>\r\n        <td>{this.state.pokemon.name}</td>\r\n        <td>{this.state.pokemon.description}</td>\r\n        <td>{this.state.pokemon.height}</td>\r\n        <td>{this.state.pokemon.weight}</td>\r\n\r\n        <td>\r\n          {this.state.pokemon.type.map((key) => (\r\n            <span className=\"badge badge-primary\">{key}</span>\r\n          ))}\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"46","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":16},{"ruleId":"42","severity":1,"message":"47","line":2,"column":18,"nodeType":"44","messageId":"45","endLine":2,"endColumn":22},{"ruleId":"48","severity":2,"message":"49","line":45,"column":10,"nodeType":"50","endLine":45,"endColumn":15},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"52","line":16,"column":11,"nodeType":"53","endLine":16,"endColumn":56},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Form' is defined but never used.","react/jsx-no-undef","'Table' is not defined.","JSXIdentifier","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]